\doxysection{Класс shell\+\_\+emulator.\+Shell\+Emulator}
\label{classshell__emulator_1_1_shell_emulator}\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection*{Открытые члены}
\begin{DoxyCompactItemize}
\item 
\textbf{ \+\_\+\+\_\+init\+\_\+\+\_\+} (self, config\+\_\+path)
\item 
\textbf{ load\+\_\+virtual\+\_\+fs} (self)
\item 
\textbf{ log\+\_\+action} (self, action, result)
\item 
\textbf{ run\+\_\+startup\+\_\+script} (self)
\item 
\textbf{ get\+\_\+current\+\_\+level} (self)
\item 
\textbf{ execute\+\_\+command} (self, command)
\item 
\textbf{ ls} (self)
\item 
\textbf{ cd} (self, path)
\item 
\textbf{ exit} (self)
\item 
\textbf{ chmod} (self, args)
\item 
\textbf{ uptime} (self)
\item 
\textbf{ rm} (self, filename)
\item 
\textbf{ start} (self)
\end{DoxyCompactItemize}
\doxysubsubsection*{Открытые атрибуты}
\begin{DoxyCompactItemize}
\item 
\textbf{ config} = configparser.\+Config\+Parser()
\item 
\textbf{ computer\+\_\+name} = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}computer\+\_\+name\textquotesingle{}]
\item 
\textbf{ vfs\+\_\+path} = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}virtual\+\_\+fs\+\_\+path\textquotesingle{}]
\item 
\textbf{ log\+\_\+path} = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}log\+\_\+path\textquotesingle{}]
\item 
\textbf{ startup\+\_\+script} = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}startup\+\_\+script\textquotesingle{}]
\item 
dict \textbf{ vfs} = \{\}
\item 
str \textbf{ current\+\_\+dir} = "{}/"{}
\item 
bool \textbf{ running} = True
\item 
\textbf{ start\+\_\+time} = time.\+time()
\end{DoxyCompactItemize}


\doxysubsection{Подробное описание}
\begin{DoxyVerb}@brief Класс эмулятора Unix shell.
@details Этот класс предоставляет интерфейс для работы с виртуальной файловой системой (VFS),
         выполнения команд shell, логирования действий и работы со стартовым скриптом.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 9}



\doxysubsection{Конструктор(ы)}
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!\_\_init\_\_@{\_\_init\_\_}}
\index{\_\_init\_\_@{\_\_init\_\_}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{\_\_init\_\_()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a3d77fd463ff1ec5cf7663b437989e446} 
shell\+\_\+emulator.\+Shell\+Emulator.\+\_\+\+\_\+init\+\_\+\+\_\+ (\begin{DoxyParamCaption}\item[{}]{self}{, }\item[{}]{config\+\_\+path}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Конструктор класса.
@param config_path Путь к файлу конфигурации.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 16}


\begin{DoxyCode}{0}
\DoxyCodeLine{00016\ \ \ \ \ \textcolor{keyword}{def\ }\_\_init\_\_(self,\ config\_path): }
\DoxyCodeLine{00017\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00018\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Конструктор\ класса. }}
\DoxyCodeLine{00019\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @param\ config\_path\ Путь\ к\ файлу\ конфигурации. }}
\DoxyCodeLine{00020\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00021\ \ \ \ \ \ \ \ \ self.config\ =\ configparser.ConfigParser() }
\DoxyCodeLine{00022\ \ \ \ \ \ \ \ \ print(\textcolor{stringliteral}{"{}Config\ file:"{}}\ +\ config\_path) }
\DoxyCodeLine{00023\ \ \ \ \ \ \ \ \ self.config.read(config\_path) }
\DoxyCodeLine{00024\  }
\DoxyCodeLine{00025\ \ \ \ \ \ \ \ \ self.computer\_name\ =\ self.config[\textcolor{stringliteral}{'Settings'}][\textcolor{stringliteral}{'computer\_name'}] }
\DoxyCodeLine{00026\ \ \ \ \ \ \ \ \ self.vfs\_path\ =\ self.config[\textcolor{stringliteral}{'Settings'}][\textcolor{stringliteral}{'virtual\_fs\_path'}] }
\DoxyCodeLine{00027\ \ \ \ \ \ \ \ \ self.log\_path\ =\ self.config[\textcolor{stringliteral}{'Settings'}][\textcolor{stringliteral}{'log\_path'}] }
\DoxyCodeLine{00028\ \ \ \ \ \ \ \ \ self.startup\_script\ =\ self.config[\textcolor{stringliteral}{'Settings'}][\textcolor{stringliteral}{'startup\_script'}] }
\DoxyCodeLine{00029\  }
\DoxyCodeLine{00030\ \ \ \ \ \ \ \ \ self.vfs\ =\ \{\} }
\DoxyCodeLine{00031\ \ \ \ \ \ \ \ \ self.current\_dir\ =\ \textcolor{stringliteral}{"{}/"{}} }
\DoxyCodeLine{00032\ \ \ \ \ \ \ \ \ self.running\ =\ \textcolor{keyword}{True} }
\DoxyCodeLine{00033\ \ \ \ \ \ \ \ \ self.start\_time\ =\ time.time()\ \ \textcolor{comment}{\#\ Время\ запуска\ программы }}
\DoxyCodeLine{00034\  }
\DoxyCodeLine{00035\ \ \ \ \ \ \ \ \ self.load\_virtual\_fs() }
\DoxyCodeLine{00036\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 0


\doxysubsection{Методы}
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!cd@{cd}}
\index{cd@{cd}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{cd()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_ad197b23f25593714fffd7da933ca4e23} 
shell\+\_\+emulator.\+Shell\+Emulator.\+cd (\begin{DoxyParamCaption}\item[{}]{self}{, }\item[{}]{path}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Изменяет текущую директорию.
@param path Новый путь.
@return Результат операции.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 150}


\begin{DoxyCode}{0}
\DoxyCodeLine{00150\ \ \ \ \ \textcolor{keyword}{def\ }cd(self,\ path): }
\DoxyCodeLine{00151\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00152\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Изменяет\ текущую\ директорию. }}
\DoxyCodeLine{00153\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @param\ path\ Новый\ путь. }}
\DoxyCodeLine{00154\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @return\ Результат\ операции. }}
\DoxyCodeLine{00155\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00156\ \ \ \ \ \ \ \ \ current\_level\ =\ self.get\_current\_level() }
\DoxyCodeLine{00157\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ path\ ==\ \textcolor{stringliteral}{"{}.."{}}: }
\DoxyCodeLine{00158\ \ \ \ \ \ \ \ \ \ \ \ \ self.current\_dir\ =\ \textcolor{stringliteral}{"{}/"{}}.join(self.current\_dir.rstrip(\textcolor{stringliteral}{'/'}).split(\textcolor{stringliteral}{'/'})[:-\/1])\ \textcolor{keywordflow}{or}\ \textcolor{stringliteral}{"{}/"{}} }
\DoxyCodeLine{00159\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Перешли\ в\ директорию\ \{self.current\_dir\}"{}} }
\DoxyCodeLine{00160\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{elif}\ path\ \textcolor{keywordflow}{in}\ current\_level\ \textcolor{keywordflow}{and}\ path:\ \ \textcolor{comment}{\#\ Переход\ в\ подкаталог }}
\DoxyCodeLine{00161\ \ \ \ \ \ \ \ \ \ \ \ \ self.current\_dir\ =\ f\textcolor{stringliteral}{"{}\{self.current\_dir.rstrip('/')\}/\{path\}/"{}} }
\DoxyCodeLine{00162\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Перешли\ в\ директорию\ \{self.current\_dir\}"{}} }
\DoxyCodeLine{00163\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{else}: }
\DoxyCodeLine{00164\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Директория\ \{path\}\ не\ найдена."{}} }
\DoxyCodeLine{00165\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 1
Граф вызова функции\+:
% FIG 2
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!chmod@{chmod}}
\index{chmod@{chmod}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{chmod()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a7d2dccc274916bd0085aedf5aec02d7b} 
shell\+\_\+emulator.\+Shell\+Emulator.\+chmod (\begin{DoxyParamCaption}\item[{}]{self}{, }\item[{}]{args}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}Изменяет права доступа файла или каталога.\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 174}


\begin{DoxyCode}{0}
\DoxyCodeLine{00174\ \ \ \ \ \textcolor{keyword}{def\ }chmod(self,\ args): }
\DoxyCodeLine{00175\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{}Изменяет\ права\ доступа\ файла\ или\ каталога."{}"{}"{}} }
\DoxyCodeLine{00176\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ len(args)\ <\ 3: }
\DoxyCodeLine{00177\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ \textcolor{stringliteral}{"{}Неправильный\ формат\ команды\ chmod.\ Используйте:\ chmod\ <права>\ <файл/каталог>"{}} }
\DoxyCodeLine{00178\ \ \ \ \ \ \ \ \ permissions,\ target\ =\ args[1],\ args[2] }
\DoxyCodeLine{00179\ \ \ \ \ \ \ \ \ current\_level\ =\ self.get\_current\_level() }
\DoxyCodeLine{00180\  }
\DoxyCodeLine{00181\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ target\ \textcolor{keywordflow}{in}\ current\_level:\ \ \textcolor{comment}{\#\ Если\ это\ подкаталог }}
\DoxyCodeLine{00182\ \ \ \ \ \ \ \ \ \ \ \ \ current\_level[target][\textcolor{stringliteral}{"{}permissions"{}}]\ =\ permissions }
\DoxyCodeLine{00183\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Установлены\ права\ '\{permissions\}'\ для\ каталога\ \{target\}."{}} }
\DoxyCodeLine{00184\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{else}:\ \ \textcolor{comment}{\#\ Если\ это\ файл }}
\DoxyCodeLine{00185\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ file\ \textcolor{keywordflow}{in}\ current\_level[\textcolor{stringliteral}{"{}"{}}]: }
\DoxyCodeLine{00186\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ file[\textcolor{stringliteral}{"{}name"{}}]\ ==\ target: }
\DoxyCodeLine{00187\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ file[\textcolor{stringliteral}{"{}permissions"{}}]\ =\ permissions }
\DoxyCodeLine{00188\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Установлены\ права\ '\{permissions\}'\ для\ файла\ \{target\}."{}} }
\DoxyCodeLine{00189\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Файл\ или\ каталог\ \{target\}\ не\ найден\ в\ текущей\ директории."{}} }
\DoxyCodeLine{00190\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 3
Граф вызова функции\+:
% FIG 4
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!execute\_command@{execute\_command}}
\index{execute\_command@{execute\_command}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{execute\_command()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a70a22165877cc7374591ac5b43ad396b} 
shell\+\_\+emulator.\+Shell\+Emulator.\+execute\+\_\+command (\begin{DoxyParamCaption}\item[{}]{self}{, }\item[{}]{command}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Обрабатывает команды shell.
@param command Команда shell.
@return Результат выполнения команды.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 106}


\begin{DoxyCode}{0}
\DoxyCodeLine{00106\ \ \ \ \ \textcolor{keyword}{def\ }execute\_command(self,\ command): }
\DoxyCodeLine{00107\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00108\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Обрабатывает\ команды\ shell. }}
\DoxyCodeLine{00109\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @param\ command\ Команда\ shell. }}
\DoxyCodeLine{00110\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @return\ Результат\ выполнения\ команды. }}
\DoxyCodeLine{00111\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00112\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{try}: }
\DoxyCodeLine{00113\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ command.startswith(\textcolor{stringliteral}{"{}ls"{}}): }
\DoxyCodeLine{00114\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ self.ls() }
\DoxyCodeLine{00115\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{elif}\ command.startswith(\textcolor{stringliteral}{"{}cd"{}}): }
\DoxyCodeLine{00116\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ self.cd(command.split(\textcolor{stringliteral}{"{}\ "{}},\ 1)[1]) }
\DoxyCodeLine{00117\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{elif}\ command.startswith(\textcolor{stringliteral}{"{}exit"{}}): }
\DoxyCodeLine{00118\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ self.exit() }
\DoxyCodeLine{00119\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{elif}\ command.startswith(\textcolor{stringliteral}{"{}chmod"{}}): }
\DoxyCodeLine{00120\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ self.chmod(command.split(\textcolor{stringliteral}{"{}\ "{}},\ 2)) }
\DoxyCodeLine{00121\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{elif}\ command.startswith(\textcolor{stringliteral}{"{}uptime"{}}): }
\DoxyCodeLine{00122\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ self.uptime() }
\DoxyCodeLine{00123\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{elif}\ command.startswith(\textcolor{stringliteral}{"{}rm"{}}): }
\DoxyCodeLine{00124\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ self.rm(command.split(\textcolor{stringliteral}{"{}\ "{}},\ 1)[1]) }
\DoxyCodeLine{00125\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{else}: }
\DoxyCodeLine{00126\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ f\textcolor{stringliteral}{"{}Неизвестная\ команда:\ \{command\}"{}} }
\DoxyCodeLine{00127\ \ \ \ \ \ \ \ \ \ \ \ \ self.log\_action(command,\ result) }
\DoxyCodeLine{00128\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{except}\ Exception\ \textcolor{keyword}{as}\ e: }
\DoxyCodeLine{00129\ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ f\textcolor{stringliteral}{"{}Ошибка\ выполнения\ команды\ '\{command\}':\ \{e\}"{}} }
\DoxyCodeLine{00130\ \ \ \ \ \ \ \ \ \ \ \ \ print(result) }
\DoxyCodeLine{00131\ \ \ \ \ \ \ \ \ \ \ \ \ self.log\_action(command,\ result) }
\DoxyCodeLine{00132\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ result }
\DoxyCodeLine{00133\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 5
Граф вызова функции\+:
% FIG 6
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!exit@{exit}}
\index{exit@{exit}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{exit()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a2c60272a6098039defcef040b5b7e79f} 
shell\+\_\+emulator.\+Shell\+Emulator.\+exit (\begin{DoxyParamCaption}\item[{}]{self}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Завершает работу shell.
@return Статус завершения работы.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 166}


\begin{DoxyCode}{0}
\DoxyCodeLine{00166\ \ \ \ \ \textcolor{keyword}{def\ }exit(self): }
\DoxyCodeLine{00167\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00168\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Завершает\ работу\ shell. }}
\DoxyCodeLine{00169\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @return\ Статус\ завершения\ работы. }}
\DoxyCodeLine{00170\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00171\ \ \ \ \ \ \ \ \ self.running\ =\ \textcolor{keyword}{False} }
\DoxyCodeLine{00172\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ \textcolor{stringliteral}{"{}Выход\ из\ системы."{}} }
\DoxyCodeLine{00173\  }

\end{DoxyCode}
Граф вызова функции\+:
% FIG 7
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!get\_current\_level@{get\_current\_level}}
\index{get\_current\_level@{get\_current\_level}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{get\_current\_level()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a011c735af80ca4023f91485345ea001a} 
shell\+\_\+emulator.\+Shell\+Emulator.\+get\+\_\+current\+\_\+level (\begin{DoxyParamCaption}\item[{}]{self}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Возвращает текущую директорию.
@return Текущая директория в формате словаря.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 94}


\begin{DoxyCode}{0}
\DoxyCodeLine{00094\ \ \ \ \ \textcolor{keyword}{def\ }get\_current\_level(self): }
\DoxyCodeLine{00095\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00096\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Возвращает\ текущую\ директорию. }}
\DoxyCodeLine{00097\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @return\ Текущая\ директория\ в\ формате\ словаря. }}
\DoxyCodeLine{00098\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00099\ \ \ \ \ \ \ \ \ parts\ =\ self.current\_dir.strip(\textcolor{stringliteral}{"{}/"{}}).split(\textcolor{stringliteral}{"{}/"{}}) }
\DoxyCodeLine{00100\ \ \ \ \ \ \ \ \ current\_level\ =\ self.vfs }
\DoxyCodeLine{00101\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ part\ \textcolor{keywordflow}{in}\ parts: }
\DoxyCodeLine{00102\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ part: }
\DoxyCodeLine{00103\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\_level\ =\ current\_level[part] }
\DoxyCodeLine{00104\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ current\_level }
\DoxyCodeLine{00105\  }

\end{DoxyCode}
Граф вызова функции\+:
% FIG 8
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!load\_virtual\_fs@{load\_virtual\_fs}}
\index{load\_virtual\_fs@{load\_virtual\_fs}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{load\_virtual\_fs()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_ae0d293fec6623a82a3e91fcda223fcf1} 
shell\+\_\+emulator.\+Shell\+Emulator.\+load\+\_\+virtual\+\_\+fs (\begin{DoxyParamCaption}\item[{}]{self}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Загрузка виртуальной файловой системы из ZIP-архива.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 37}


\begin{DoxyCode}{0}
\DoxyCodeLine{00037\ \ \ \ \ \textcolor{keyword}{def\ }load\_virtual\_fs(self): }
\DoxyCodeLine{00038\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00039\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Загрузка\ виртуальной\ файловой\ системы\ из\ ZIP-\/архива. }}
\DoxyCodeLine{00040\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00041\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{try}: }
\DoxyCodeLine{00042\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keyword}{with}\ zipfile.ZipFile(self.vfs\_path,\ \textcolor{stringliteral}{'r'})\ \textcolor{keyword}{as}\ zip\_ref: }
\DoxyCodeLine{00043\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.vfs\ =\ \{\textcolor{stringliteral}{"{}"{}}:\ []\}\ \ \textcolor{comment}{\#\ Корневая\ директория }}
\DoxyCodeLine{00044\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ name\ \textcolor{keywordflow}{in}\ zip\_ref.namelist(): }
\DoxyCodeLine{00045\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ parts\ =\ name.strip(\textcolor{stringliteral}{"{}/"{}}).split(\textcolor{stringliteral}{"{}/"{}}) }
\DoxyCodeLine{00046\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\_level\ =\ self.vfs }
\DoxyCodeLine{00047\  }
\DoxyCodeLine{00048\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ part\ \textcolor{keywordflow}{in}\ parts[:-\/1]: }
\DoxyCodeLine{00049\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ part\ \textcolor{keywordflow}{not}\ \textcolor{keywordflow}{in}\ current\_level: }
\DoxyCodeLine{00050\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\_level[part]\ =\ \{\textcolor{stringliteral}{"{}"{}}:\ [],\ \textcolor{stringliteral}{"{}permissions"{}}:\ \textcolor{stringliteral}{"{}755"{}}\}\ \ \textcolor{comment}{\#\ Подкаталог }}
\DoxyCodeLine{00051\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\_level\ =\ current\_level[part] }
\DoxyCodeLine{00052\  }
\DoxyCodeLine{00053\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{comment}{\#\ Добавляем\ файл\ или\ подкаталог }}
\DoxyCodeLine{00054\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ name.endswith(\textcolor{stringliteral}{"{}/"{}}): }
\DoxyCodeLine{00055\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\_level[parts[-\/1]]\ =\ \{\textcolor{stringliteral}{"{}"{}}:\ [],\ \textcolor{stringliteral}{"{}permissions"{}}:\ \textcolor{stringliteral}{"{}755"{}}\}\ \ \textcolor{comment}{\#\ Пустой\ каталог }}
\DoxyCodeLine{00056\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{else}: }
\DoxyCodeLine{00057\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\_level[\textcolor{stringliteral}{"{}"{}}].append(\{\textcolor{stringliteral}{"{}name"{}}:\ parts[-\/1],\ \textcolor{stringliteral}{"{}permissions"{}}:\ \textcolor{stringliteral}{"{}644"{}}\})\ \ \textcolor{comment}{\#\ Файл }}
\DoxyCodeLine{00058\  }
\DoxyCodeLine{00059\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{except}\ FileNotFoundError: }
\DoxyCodeLine{00060\ \ \ \ \ \ \ \ \ \ \ \ \ print(f\textcolor{stringliteral}{"{}Ошибка:\ архив\ \{self.vfs\_path\}\ не\ найден."{}}) }
\DoxyCodeLine{00061\ \ \ \ \ \ \ \ \ \ \ \ \ self.running\ =\ \textcolor{keyword}{False} }
\DoxyCodeLine{00062\  }

\end{DoxyCode}
Граф вызова функции\+:
% FIG 9
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!log\_action@{log\_action}}
\index{log\_action@{log\_action}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{log\_action()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a0edb4884ac68d58248d3306271048ce0} 
shell\+\_\+emulator.\+Shell\+Emulator.\+log\+\_\+action (\begin{DoxyParamCaption}\item[{}]{self}{, }\item[{}]{action}{, }\item[{}]{result}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Логирует действие и результат выполнения.
@param action Действие или команда.
@param result Результат выполнения действия.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 63}


\begin{DoxyCode}{0}
\DoxyCodeLine{00063\ \ \ \ \ \textcolor{keyword}{def\ }log\_action(self,\ action,\ result): }
\DoxyCodeLine{00064\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00065\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Логирует\ действие\ и\ результат\ выполнения. }}
\DoxyCodeLine{00066\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @param\ action\ Действие\ или\ команда. }}
\DoxyCodeLine{00067\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @param\ result\ Результат\ выполнения\ действия. }}
\DoxyCodeLine{00068\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00069\ \ \ \ \ \ \ \ \ entry\ =\ \{ }
\DoxyCodeLine{00070\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}timestamp"{}}:\ datetime.now().strftime(\textcolor{stringliteral}{"{}\%Y-\/\%m-\/\%d\ \%H:\%M:\%S"{}}), }
\DoxyCodeLine{00071\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}command"{}}:\ action, }
\DoxyCodeLine{00072\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}result"{}}:\ result }
\DoxyCodeLine{00073\ \ \ \ \ \ \ \ \ \} }
\DoxyCodeLine{00074\ \ \ \ \ \ \ \ \ \textcolor{keyword}{with}\ open(self.log\_path,\ \textcolor{stringliteral}{"{}a"{}},\ encoding=\textcolor{stringliteral}{"{}utf-\/8"{}})\ \textcolor{keyword}{as}\ log\_file: }
\DoxyCodeLine{00075\ \ \ \ \ \ \ \ \ \ \ \ \ log\_file.write(json.dumps(entry,\ ensure\_ascii=\textcolor{keyword}{False})\ +\ \textcolor{stringliteral}{"{}\(\backslash\)n"{}}) }
\DoxyCodeLine{00076\  }

\end{DoxyCode}
Граф вызова функции\+:
% FIG 10
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!ls@{ls}}
\index{ls@{ls}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{ls()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a41cb94a5aae8b29f579c60123d425601} 
shell\+\_\+emulator.\+Shell\+Emulator.\+ls (\begin{DoxyParamCaption}\item[{}]{self}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Выводит содержимое текущей директории с уровнями доступа.
@return Список содержимого текущей директории.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 134}


\begin{DoxyCode}{0}
\DoxyCodeLine{00134\ \ \ \ \ \textcolor{keyword}{def\ }ls(self): }
\DoxyCodeLine{00135\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00136\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Выводит\ содержимое\ текущей\ директории\ с\ уровнями\ доступа. }}
\DoxyCodeLine{00137\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @return\ Список\ содержимого\ текущей\ директории. }}
\DoxyCodeLine{00138\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00139\ \ \ \ \ \ \ \ \ current\_level\ =\ self.get\_current\_level() }
\DoxyCodeLine{00140\ \ \ \ \ \ \ \ \ result\ =\ [] }
\DoxyCodeLine{00141\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ directory,\ content\ \textcolor{keywordflow}{in}\ current\_level.items(): }
\DoxyCodeLine{00142\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ directory\ \textcolor{keywordflow}{and}\ directory\ !=\ \textcolor{stringliteral}{"{}permissions"{}}:\ \ \textcolor{comment}{\#\ Это\ подкаталог }}
\DoxyCodeLine{00143\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result.append(f\textcolor{stringliteral}{"{}[DIR]\ \{directory\}\ (permissions:\ \{content['permissions']\})"{}}) }
\DoxyCodeLine{00144\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ file\ \textcolor{keywordflow}{in}\ current\_level[\textcolor{stringliteral}{"{}"{}}]:\ \ \textcolor{comment}{\#\ Файлы }}
\DoxyCodeLine{00145\ \ \ \ \ \ \ \ \ \ \ \ \ result.append(f\textcolor{stringliteral}{"{}\{file['name']\}\ (permissions:\ \{file['permissions']\})"{}}) }
\DoxyCodeLine{00146\ \ \ \ \ \ \ \ \ output\ =\ \textcolor{stringliteral}{"{}\(\backslash\)n"{}}.join(result) }
\DoxyCodeLine{00147\ \ \ \ \ \ \ \ \ print(output) }
\DoxyCodeLine{00148\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ output }
\DoxyCodeLine{00149\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 11
Граф вызова функции\+:
% FIG 12
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!rm@{rm}}
\index{rm@{rm}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{rm()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a48f84d43b771106260cd4bc7a0fabc12} 
shell\+\_\+emulator.\+Shell\+Emulator.\+rm (\begin{DoxyParamCaption}\item[{}]{self}{, }\item[{}]{filename}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}Удаляет файл.\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 198}


\begin{DoxyCode}{0}
\DoxyCodeLine{00198\ \ \ \ \ \textcolor{keyword}{def\ }rm(self,\ filename): }
\DoxyCodeLine{00199\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{}Удаляет\ файл."{}"{}"{}} }
\DoxyCodeLine{00200\ \ \ \ \ \ \ \ \ current\_level\ =\ self.get\_current\_level() }
\DoxyCodeLine{00201\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ file\ \textcolor{keywordflow}{in}\ current\_level[\textcolor{stringliteral}{"{}"{}}]: }
\DoxyCodeLine{00202\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ file[\textcolor{stringliteral}{"{}name"{}}]\ ==\ filename: }
\DoxyCodeLine{00203\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\_level[\textcolor{stringliteral}{"{}"{}}].remove(file) }
\DoxyCodeLine{00204\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Файл\ \{filename\}\ удалён."{}} }
\DoxyCodeLine{00205\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ f\textcolor{stringliteral}{"{}Файл\ \{filename\}\ не\ найден\ в\ текущей\ директории."{}} }
\DoxyCodeLine{00206\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 13
Граф вызова функции\+:
% FIG 14
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!run\_startup\_script@{run\_startup\_script}}
\index{run\_startup\_script@{run\_startup\_script}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{run\_startup\_script()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a9932c4ab10184127c0176c6083e1abc5} 
shell\+\_\+emulator.\+Shell\+Emulator.\+run\+\_\+startup\+\_\+script (\begin{DoxyParamCaption}\item[{}]{self}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}@brief Выполняет команды из стартового скрипта.
@return Лог выполнения команд скрипта.
\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 77}


\begin{DoxyCode}{0}
\DoxyCodeLine{00077\ \ \ \ \ \textcolor{keyword}{def\ }run\_startup\_script(self): }
\DoxyCodeLine{00078\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{} }}
\DoxyCodeLine{00079\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @brief\ Выполняет\ команды\ из\ стартового\ скрипта. }}
\DoxyCodeLine{00080\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ @return\ Лог\ выполнения\ команд\ скрипта. }}
\DoxyCodeLine{00081\ \textcolor{stringliteral}{\ \ \ \ \ \ \ \ "{}"{}"{}} }
\DoxyCodeLine{00082\ \ \ \ \ \ \ \ \ result\ =\ \textcolor{stringliteral}{"{}"{}} }
\DoxyCodeLine{00083\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{if}\ os.path.exists(self.startup\_script): }
\DoxyCodeLine{00084\ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keyword}{with}\ open(self.startup\_script,\ \textcolor{stringliteral}{'r'})\ \textcolor{keyword}{as}\ script: }
\DoxyCodeLine{00085\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ commands\ =\ script.readlines() }
\DoxyCodeLine{00086\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{for}\ command\ \textcolor{keywordflow}{in}\ commands: }
\DoxyCodeLine{00087\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ +=\ f\textcolor{stringliteral}{"{}Запуск\ команды\ из\ скрипта:\ \{command\}\(\backslash\)n"{}} }
\DoxyCodeLine{00088\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ +=\ self.execute\_command(command.strip()) }
\DoxyCodeLine{00089\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ result\ +=\ \textcolor{stringliteral}{"{}\(\backslash\)n"{}} }
\DoxyCodeLine{00090\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{else}: }
\DoxyCodeLine{00091\ \ \ \ \ \ \ \ \ \ \ \ \ result\ =\ f\textcolor{stringliteral}{"{}Стартовый\ скрипт\ не\ найден:\ \{self.startup\_script\}\(\backslash\)n"{}} }
\DoxyCodeLine{00092\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ result }
\DoxyCodeLine{00093\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 15
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!start@{start}}
\index{start@{start}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{start()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_aabd5663b6f142b6413bcd90aab8de5db} 
shell\+\_\+emulator.\+Shell\+Emulator.\+start (\begin{DoxyParamCaption}\item[{}]{self}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}Запуск shell.\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 207}


\begin{DoxyCode}{0}
\DoxyCodeLine{00207\ \ \ \ \ \textcolor{keyword}{def\ }start(self): }
\DoxyCodeLine{00208\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{}Запуск\ shell."{}"{}"{}} }
\DoxyCodeLine{00209\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{while}\ self.running: }
\DoxyCodeLine{00210\ \ \ \ \ \ \ \ \ \ \ \ \ command\ =\ input(f\textcolor{stringliteral}{"{}\{self.computer\_name\}:\{self.current\_dir\}\$\ "{}}) }
\DoxyCodeLine{00211\ \ \ \ \ \ \ \ \ \ \ \ \ self.execute\_command(command) }
\DoxyCodeLine{00212\  }
\DoxyCodeLine{00213\  }

\end{DoxyCode}
Граф вызовов\+:
% FIG 16
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!uptime@{uptime}}
\index{uptime@{uptime}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{uptime()}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a95c760e36a4c6d59fd24b055aa3628e7} 
shell\+\_\+emulator.\+Shell\+Emulator.\+uptime (\begin{DoxyParamCaption}\item[{}]{self}{}\end{DoxyParamCaption})}

\begin{DoxyVerb}Выводит время работы shell с момента запуска.\end{DoxyVerb}
 

См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 191}


\begin{DoxyCode}{0}
\DoxyCodeLine{00191\ \ \ \ \ \textcolor{keyword}{def\ }uptime(self): }
\DoxyCodeLine{00192\ \ \ \ \ \ \ \ \ \textcolor{stringliteral}{"{}"{}"{}Выводит\ время\ работы\ shell\ с\ момента\ запуска."{}"{}"{}} }
\DoxyCodeLine{00193\ \ \ \ \ \ \ \ \ uptime\_seconds\ =\ time.time()\ -\/\ self.start\_time }
\DoxyCodeLine{00194\ \ \ \ \ \ \ \ \ uptime\_str\ =\ f\textcolor{stringliteral}{"{}Система\ работает\ \{uptime\_seconds:.2f\}\ секунд."{}} }
\DoxyCodeLine{00195\ \ \ \ \ \ \ \ \ print(uptime\_str) }
\DoxyCodeLine{00196\ \ \ \ \ \ \ \ \ \textcolor{keywordflow}{return}\ uptime\_str }
\DoxyCodeLine{00197\  }

\end{DoxyCode}
Граф вызова функции\+:
% FIG 17


\doxysubsection{Данные класса}
\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!computer\_name@{computer\_name}}
\index{computer\_name@{computer\_name}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{computer\_name}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_aa3f6ed780c7fbde1187a625bc3aad4b1} 
shell\+\_\+emulator.\+Shell\+Emulator.\+computer\+\_\+name = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}computer\+\_\+name\textquotesingle{}]}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 25}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!config@{config}}
\index{config@{config}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{config}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_af5c13c8846236c2a215ab06cef2097f5} 
shell\+\_\+emulator.\+Shell\+Emulator.\+config = configparser.\+Config\+Parser()}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 21}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!current\_dir@{current\_dir}}
\index{current\_dir@{current\_dir}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{current\_dir}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_af1325673ea049c11718986451cedf87c} 
str shell\+\_\+emulator.\+Shell\+Emulator.\+current\+\_\+dir = "{}/"{}}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 31}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!log\_path@{log\_path}}
\index{log\_path@{log\_path}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{log\_path}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_ae21d21820eb8a56eccdcfd6b597270c4} 
shell\+\_\+emulator.\+Shell\+Emulator.\+log\+\_\+path = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}log\+\_\+path\textquotesingle{}]}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 27}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!running@{running}}
\index{running@{running}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{running}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a21265590b9a17aa6f0d8dcf5b4e0b528} 
shell\+\_\+emulator.\+Shell\+Emulator.\+running = True}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 32}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!start\_time@{start\_time}}
\index{start\_time@{start\_time}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{start\_time}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a2eae187188192a47c40e727a37e34081} 
shell\+\_\+emulator.\+Shell\+Emulator.\+start\+\_\+time = time.\+time()}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 33}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!startup\_script@{startup\_script}}
\index{startup\_script@{startup\_script}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{startup\_script}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_ad9abb568692bd7767d3596c92066ac6e} 
shell\+\_\+emulator.\+Shell\+Emulator.\+startup\+\_\+script = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}startup\+\_\+script\textquotesingle{}]}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 28}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!vfs@{vfs}}
\index{vfs@{vfs}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{vfs}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_aa6726491c22b51f608c4623af4a7df4b} 
dict shell\+\_\+emulator.\+Shell\+Emulator.\+vfs = \{\}}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 30}

\index{shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}!vfs\_path@{vfs\_path}}
\index{vfs\_path@{vfs\_path}!shell\_emulator.ShellEmulator@{shell\_emulator.ShellEmulator}}
\doxysubsubsection{vfs\_path}
{\footnotesize\ttfamily \label{classshell__emulator_1_1_shell_emulator_a34ed1a3a170febdf10b8a1de68ca1064} 
shell\+\_\+emulator.\+Shell\+Emulator.\+vfs\+\_\+path = self.\+config[\textquotesingle{}Settings\textquotesingle{}][\textquotesingle{}virtual\+\_\+fs\+\_\+path\textquotesingle{}]}



См. определение в файле \textbf{ shell\+\_\+emulator.\+py} строка \textbf{ 26}



Объявления и описания членов класса находятся в файле\+:\begin{DoxyCompactItemize}
\item 
C\+:/prj/python/\+FSemylator/shell\+\_\+emulator.\+py\end{DoxyCompactItemize}
